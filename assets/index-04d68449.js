(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const u of i.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&s(u)}).observe(document,{childList:!0,subtree:!0});function e(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=e(n);fetch(n.href,i)}})();function S(r,t){if(r==null)return{};var e={},s=Object.keys(r),n,i;for(i=0;i<s.length;i++)n=s[i],!(t.indexOf(n)>=0)&&(e[n]=r[n]);return e}function d(r){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return new d.InputMask(r,t)}class c{constructor(t){Object.assign(this,{inserted:"",rawInserted:"",skip:!1,tailShift:0},t)}aggregate(t){return this.rawInserted+=t.rawInserted,this.skip=this.skip||t.skip,this.inserted+=t.inserted,this.tailShift+=t.tailShift,this}get offset(){return this.tailShift+this.inserted.length}}d.ChangeDetails=c;function C(r){return typeof r=="string"||r instanceof String}const o={NONE:"NONE",LEFT:"LEFT",FORCE_LEFT:"FORCE_LEFT",RIGHT:"RIGHT",FORCE_RIGHT:"FORCE_RIGHT"};function Y(r){switch(r){case o.LEFT:return o.FORCE_LEFT;case o.RIGHT:return o.FORCE_RIGHT;default:return r}}function I(r){return r.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function D(r){return Array.isArray(r)?r:[r,new c]}function P(r,t){if(t===r)return!0;var e=Array.isArray(t),s=Array.isArray(r),n;if(e&&s){if(t.length!=r.length)return!1;for(n=0;n<t.length;n++)if(!P(t[n],r[n]))return!1;return!0}if(e!=s)return!1;if(t&&r&&typeof t=="object"&&typeof r=="object"){var i=t instanceof Date,u=r instanceof Date;if(i&&u)return t.getTime()==r.getTime();if(i!=u)return!1;var a=t instanceof RegExp,l=r instanceof RegExp;if(a&&l)return t.toString()==r.toString();if(a!=l)return!1;var h=Object.keys(t);for(n=0;n<h.length;n++)if(!Object.prototype.hasOwnProperty.call(r,h[n]))return!1;for(n=0;n<h.length;n++)if(!P(r[h[n]],t[h[n]]))return!1;return!0}else if(t&&r&&typeof t=="function"&&typeof r=="function")return t.toString()===r.toString();return!1}class ${constructor(t,e,s,n){for(this.value=t,this.cursorPos=e,this.oldValue=s,this.oldSelection=n;this.value.slice(0,this.startChangePos)!==this.oldValue.slice(0,this.startChangePos);)--this.oldSelection.start}get startChangePos(){return Math.min(this.cursorPos,this.oldSelection.start)}get insertedCount(){return this.cursorPos-this.startChangePos}get inserted(){return this.value.substr(this.startChangePos,this.insertedCount)}get removedCount(){return Math.max(this.oldSelection.end-this.startChangePos||this.oldValue.length-this.value.length,0)}get removed(){return this.oldValue.substr(this.startChangePos,this.removedCount)}get head(){return this.value.substring(0,this.startChangePos)}get tail(){return this.value.substring(this.startChangePos+this.insertedCount)}get removeDirection(){return!this.removedCount||this.insertedCount?o.NONE:(this.oldSelection.end===this.cursorPos||this.oldSelection.start===this.cursorPos)&&this.oldSelection.end===this.oldSelection.start?o.RIGHT:o.LEFT}}class k{constructor(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,s=arguments.length>2?arguments[2]:void 0;this.value=t,this.from=e,this.stop=s}toString(){return this.value}extend(t){this.value+=String(t)}appendTo(t){return t.append(this.toString(),{tail:!0}).aggregate(t._appendPlaceholder())}get state(){return{value:this.value,from:this.from,stop:this.stop}}set state(t){Object.assign(this,t)}unshift(t){if(!this.value.length||t!=null&&this.from>=t)return"";const e=this.value[0];return this.value=this.value.slice(1),e}shift(){if(!this.value.length)return"";const t=this.value[this.value.length-1];return this.value=this.value.slice(0,-1),t}}class g{constructor(t){this._value="",this._update(Object.assign({},g.DEFAULTS,t)),this.isInitialized=!0}updateOptions(t){Object.keys(t).length&&this.withValueRefresh(this._update.bind(this,t))}_update(t){Object.assign(this,t)}get state(){return{_value:this.value}}set state(t){this._value=t._value}reset(){this._value=""}get value(){return this._value}set value(t){this.resolve(t)}resolve(t){return this.reset(),this.append(t,{input:!0},""),this.doCommit(),this.value}get unmaskedValue(){return this.value}set unmaskedValue(t){this.reset(),this.append(t,{},""),this.doCommit()}get typedValue(){return this.doParse(this.value)}set typedValue(t){this.value=this.doFormat(t)}get rawInputValue(){return this.extractInput(0,this.value.length,{raw:!0})}set rawInputValue(t){this.reset(),this.append(t,{raw:!0},""),this.doCommit()}get displayValue(){return this.value}get isComplete(){return!0}get isFilled(){return this.isComplete}nearestInputPos(t,e){return t}totalInputPositions(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return Math.min(this.value.length,e-t)}extractInput(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return this.value.slice(t,e)}extractTail(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return new k(this.extractInput(t,e),t)}appendTail(t){return C(t)&&(t=new k(String(t))),t.appendTo(this)}_appendCharRaw(t){return t?(this._value+=t,new c({inserted:t,rawInserted:t})):new c}_appendChar(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=arguments.length>2?arguments[2]:void 0;const n=this.state;let i;if([t,i]=D(this.doPrepare(t,e)),i=i.aggregate(this._appendCharRaw(t,e)),i.inserted){let u,a=this.doValidate(e)!==!1;if(a&&s!=null){const l=this.state;this.overwrite===!0&&(u=s.state,s.unshift(this.value.length-i.tailShift));let h=this.appendTail(s);a=h.rawInserted===s.toString(),!(a&&h.inserted)&&this.overwrite==="shift"&&(this.state=l,u=s.state,s.shift(),h=this.appendTail(s),a=h.rawInserted===s.toString()),a&&h.inserted&&(this.state=l)}a||(i=new c,this.state=n,s&&u&&(s.state=u))}return i}_appendPlaceholder(){return new c}_appendEager(){return new c}append(t,e,s){if(!C(t))throw new Error("value should be string");const n=new c,i=C(s)?new k(String(s)):s;e!=null&&e.tail&&(e._beforeTailState=this.state);for(let u=0;u<t.length;++u){const a=this._appendChar(t[u],e,i);if(!a.rawInserted&&!this.doSkipInvalid(t[u],e,i))break;n.aggregate(a)}return i!=null&&(n.tailShift+=this.appendTail(i).tailShift),(this.eager===!0||this.eager==="append")&&e!==null&&e!==void 0&&e.input&&t&&n.aggregate(this._appendEager()),n}remove(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return this._value=this.value.slice(0,t)+this.value.slice(e),new c}withValueRefresh(t){if(this._refreshing||!this.isInitialized)return t();this._refreshing=!0;const e=this.rawInputValue,s=this.value,n=t();return this.rawInputValue=e,this.value&&this.value!==s&&s.indexOf(this.value)===0&&this.append(s.slice(this.value.length),{},""),delete this._refreshing,n}runIsolated(t){if(this._isolated||!this.isInitialized)return t(this);this._isolated=!0;const e=this.state,s=t(this);return this.state=e,delete this._isolated,s}doSkipInvalid(t){return this.skipInvalid}doPrepare(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return this.prepare?this.prepare(t,this,e):t}doValidate(t){return(!this.validate||this.validate(this.value,this,t))&&(!this.parent||this.parent.doValidate(t))}doCommit(){this.commit&&this.commit(this.value,this)}doFormat(t){return this.format?this.format(t,this):t}doParse(t){return this.parse?this.parse(t,this):t}splice(t,e,s,n){let i=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{input:!0};const u=t+e,a=this.extractTail(u),l=this.eager===!0||this.eager==="remove";let h;l&&(n=Y(n),h=this.extractInput(0,u,{raw:!0}));let m=t;const _=new c;if(n!==o.NONE&&(m=this.nearestInputPos(t,e>1&&t!==0&&!l?o.NONE:n),_.tailShift=m-t),_.aggregate(this.remove(m)),l&&n!==o.NONE&&h===this.rawInputValue)if(n===o.FORCE_LEFT){let x;for(;h===this.rawInputValue&&(x=this.value.length);)_.aggregate(new c({tailShift:-1})).aggregate(this.remove(x-1))}else n===o.FORCE_RIGHT&&a.unshift();return _.aggregate(this.append(s,i,a))}maskEquals(t){return this.mask===t}typedValueEquals(t){const e=this.typedValue;return t===e||g.EMPTY_VALUES.includes(t)&&g.EMPTY_VALUES.includes(e)||this.doFormat(t)===this.doFormat(this.typedValue)}}g.DEFAULTS={format:String,parse:r=>r,skipInvalid:!0};g.EMPTY_VALUES=[void 0,null,""];d.Masked=g;function O(r){if(r==null)throw new Error("mask property should be defined");return r instanceof RegExp?d.MaskedRegExp:C(r)?d.MaskedPattern:r instanceof Date||r===Date?d.MaskedDate:r instanceof Number||typeof r=="number"||r===Number?d.MaskedNumber:Array.isArray(r)||r===Array?d.MaskedDynamic:d.Masked&&r.prototype instanceof d.Masked?r:r instanceof d.Masked?r.constructor:r instanceof Function?d.MaskedFunction:(console.warn("Mask not found for mask",r),d.Masked)}function E(r){if(d.Masked&&r instanceof d.Masked)return r;r=Object.assign({},r);const t=r.mask;if(d.Masked&&t instanceof d.Masked)return t;const e=O(t);if(!e)throw new Error("Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.");return new e(r)}d.createMask=E;const K=["parent","isOptional","placeholderChar","displayChar","lazy","eager"],Z={0:/\d/,a:/[\u0041-\u005A\u0061-\u007A\u00AA\u00B5\u00BA\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0\u08A2-\u08AC\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097F\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C33\u0C35-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191C\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA697\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA793\uA7A0-\uA7AA\uA7F8-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA80-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,"*":/./};class L{constructor(t){const{parent:e,isOptional:s,placeholderChar:n,displayChar:i,lazy:u,eager:a}=t,l=S(t,K);this.masked=E(l),Object.assign(this,{parent:e,isOptional:s,placeholderChar:n,displayChar:i,lazy:u,eager:a})}reset(){this.isFilled=!1,this.masked.reset()}remove(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return t===0&&e>=1?(this.isFilled=!1,this.masked.remove(t,e)):new c}get value(){return this.masked.value||(this.isFilled&&!this.isOptional?this.placeholderChar:"")}get unmaskedValue(){return this.masked.unmaskedValue}get displayValue(){return this.masked.value&&this.displayChar||this.value}get isComplete(){return!!this.masked.value||this.isOptional}_appendChar(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(this.isFilled)return new c;const s=this.masked.state,n=this.masked._appendChar(t,e);return n.inserted&&this.doValidate(e)===!1&&(n.inserted=n.rawInserted="",this.masked.state=s),!n.inserted&&!this.isOptional&&!this.lazy&&!e.input&&(n.inserted=this.placeholderChar),n.skip=!n.inserted&&!this.isOptional,this.isFilled=!!n.inserted,n}append(){return this.masked.append(...arguments)}_appendPlaceholder(){const t=new c;return this.isFilled||this.isOptional||(this.isFilled=!0,t.inserted=this.placeholderChar),t}_appendEager(){return new c}extractTail(){return this.masked.extractTail(...arguments)}appendTail(){return this.masked.appendTail(...arguments)}extractInput(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,s=arguments.length>2?arguments[2]:void 0;return this.masked.extractInput(t,e,s)}nearestInputPos(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:o.NONE;const s=0,n=this.value.length,i=Math.min(Math.max(t,s),n);switch(e){case o.LEFT:case o.FORCE_LEFT:return this.isComplete?i:s;case o.RIGHT:case o.FORCE_RIGHT:return this.isComplete?i:n;case o.NONE:default:return i}}totalInputPositions(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;return this.value.slice(t,e).length}doValidate(){return this.masked.doValidate(...arguments)&&(!this.parent||this.parent.doValidate(...arguments))}doCommit(){this.masked.doCommit()}get state(){return{masked:this.masked.state,isFilled:this.isFilled}}set state(t){this.masked.state=t.masked,this.isFilled=t.isFilled}}class N{constructor(t){Object.assign(this,t),this._value="",this.isFixed=!0}get value(){return this._value}get unmaskedValue(){return this.isUnmasking?this.value:""}get displayValue(){return this.value}reset(){this._isRawInput=!1,this._value=""}remove(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this._value.length;return this._value=this._value.slice(0,t)+this._value.slice(e),this._value||(this._isRawInput=!1),new c}nearestInputPos(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:o.NONE;const s=0,n=this._value.length;switch(e){case o.LEFT:case o.FORCE_LEFT:return s;case o.NONE:case o.RIGHT:case o.FORCE_RIGHT:default:return n}}totalInputPositions(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this._value.length;return this._isRawInput?e-t:0}extractInput(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this._value.length;return(arguments.length>2&&arguments[2]!==void 0?arguments[2]:{}).raw&&this._isRawInput&&this._value.slice(t,e)||""}get isComplete(){return!0}get isFilled(){return!!this._value}_appendChar(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const s=new c;if(this.isFilled)return s;const n=this.eager===!0||this.eager==="append",u=this.char===t&&(this.isUnmasking||e.input||e.raw)&&(!e.raw||!n)&&!e.tail;return u&&(s.rawInserted=this.char),this._value=s.inserted=this.char,this._isRawInput=u&&(e.raw||e.input),s}_appendEager(){return this._appendChar(this.char,{tail:!0})}_appendPlaceholder(){const t=new c;return this.isFilled||(this._value=t.inserted=this.char),t}extractTail(){return arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,new k("")}appendTail(t){return C(t)&&(t=new k(String(t))),t.appendTo(this)}append(t,e,s){const n=this._appendChar(t[0],e);return s!=null&&(n.tailShift+=this.appendTail(s).tailShift),n}doCommit(){}get state(){return{_value:this._value,_isRawInput:this._isRawInput}}set state(t){Object.assign(this,t)}}const X=["chunks"];class v{constructor(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;this.chunks=t,this.from=e}toString(){return this.chunks.map(String).join("")}extend(t){if(!String(t))return;C(t)&&(t=new k(String(t)));const e=this.chunks[this.chunks.length-1],s=e&&(e.stop===t.stop||t.stop==null)&&t.from===e.from+e.toString().length;if(t instanceof k)s?e.extend(t.toString()):this.chunks.push(t);else if(t instanceof v){if(t.stop==null){let n;for(;t.chunks.length&&t.chunks[0].stop==null;)n=t.chunks.shift(),n.from+=t.from,this.extend(n)}t.toString()&&(t.stop=t.blockIndex,this.chunks.push(t))}}appendTo(t){if(!(t instanceof d.MaskedPattern))return new k(this.toString()).appendTo(t);const e=new c;for(let s=0;s<this.chunks.length&&!e.skip;++s){const n=this.chunks[s],i=t._mapPosToBlock(t.value.length),u=n.stop;let a;if(u!=null&&(!i||i.index<=u)){if(n instanceof v||t._stops.indexOf(u)>=0){const l=t._appendPlaceholder(u);e.aggregate(l)}a=n instanceof v&&t._blocks[u]}if(a){const l=a.appendTail(n);l.skip=!1,e.aggregate(l),t._value+=l.inserted;const h=n.toString().slice(l.rawInserted.length);h&&e.aggregate(t.append(h,{tail:!0}))}else e.aggregate(t.append(n.toString(),{tail:!0}))}return e}get state(){return{chunks:this.chunks.map(t=>t.state),from:this.from,stop:this.stop,blockIndex:this.blockIndex}}set state(t){const{chunks:e}=t,s=S(t,X);Object.assign(this,s),this.chunks=e.map(n=>{const i="chunks"in n?new v:new k;return i.state=n,i})}unshift(t){if(!this.chunks.length||t!=null&&this.from>=t)return"";const e=t!=null?t-this.from:t;let s=0;for(;s<this.chunks.length;){const n=this.chunks[s],i=n.unshift(e);if(n.toString()){if(!i)break;++s}else this.chunks.splice(s,1);if(i)return i}return""}shift(){if(!this.chunks.length)return"";let t=this.chunks.length-1;for(;0<=t;){const e=this.chunks[t],s=e.shift();if(e.toString()){if(!s)break;--t}else this.chunks.splice(t,1);if(s)return s}return""}}class W{constructor(t,e){this.masked=t,this._log=[];const{offset:s,index:n}=t._mapPosToBlock(e)||(e<0?{index:0,offset:0}:{index:this.masked._blocks.length,offset:0});this.offset=s,this.index=n,this.ok=!1}get block(){return this.masked._blocks[this.index]}get pos(){return this.masked._blockStartPos(this.index)+this.offset}get state(){return{index:this.index,offset:this.offset,ok:this.ok}}set state(t){Object.assign(this,t)}pushState(){this._log.push(this.state)}popState(){const t=this._log.pop();return this.state=t,t}bindBlock(){this.block||(this.index<0&&(this.index=0,this.offset=0),this.index>=this.masked._blocks.length&&(this.index=this.masked._blocks.length-1,this.offset=this.block.value.length))}_pushLeft(t){for(this.pushState(),this.bindBlock();0<=this.index;--this.index,this.offset=((e=this.block)===null||e===void 0?void 0:e.value.length)||0){var e;if(t())return this.ok=!0}return this.ok=!1}_pushRight(t){for(this.pushState(),this.bindBlock();this.index<this.masked._blocks.length;++this.index,this.offset=0)if(t())return this.ok=!0;return this.ok=!1}pushLeftBeforeFilled(){return this._pushLeft(()=>{if(!(this.block.isFixed||!this.block.value)&&(this.offset=this.block.nearestInputPos(this.offset,o.FORCE_LEFT),this.offset!==0))return!0})}pushLeftBeforeInput(){return this._pushLeft(()=>{if(!this.block.isFixed)return this.offset=this.block.nearestInputPos(this.offset,o.LEFT),!0})}pushLeftBeforeRequired(){return this._pushLeft(()=>{if(!(this.block.isFixed||this.block.isOptional&&!this.block.value))return this.offset=this.block.nearestInputPos(this.offset,o.LEFT),!0})}pushRightBeforeFilled(){return this._pushRight(()=>{if(!(this.block.isFixed||!this.block.value)&&(this.offset=this.block.nearestInputPos(this.offset,o.FORCE_RIGHT),this.offset!==this.block.value.length))return!0})}pushRightBeforeInput(){return this._pushRight(()=>{if(!this.block.isFixed)return this.offset=this.block.nearestInputPos(this.offset,o.NONE),!0})}pushRightBeforeRequired(){return this._pushRight(()=>{if(!(this.block.isFixed||this.block.isOptional&&!this.block.value))return this.offset=this.block.nearestInputPos(this.offset,o.NONE),!0})}}class J extends g{_update(t){t.mask&&(t.validate=e=>e.search(t.mask)>=0),super._update(t)}}d.MaskedRegExp=J;const Q=["_blocks"];class p extends g{constructor(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};t.definitions=Object.assign({},Z,t.definitions),super(Object.assign({},p.DEFAULTS,t))}_update(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};t.definitions=Object.assign({},this.definitions,t.definitions),super._update(t),this._rebuildMask()}_rebuildMask(){const t=this.definitions;this._blocks=[],this._stops=[],this._maskedBlocks={};let e=this.mask;if(!e||!t)return;let s=!1,n=!1;for(let a=0;a<e.length;++a){var i,u;if(this.blocks){const x=e.slice(a),R=Object.keys(this.blocks).filter(F=>x.indexOf(F)===0);R.sort((F,G)=>G.length-F.length);const A=R[0];if(A){const F=E(Object.assign({parent:this,lazy:this.lazy,eager:this.eager,placeholderChar:this.placeholderChar,displayChar:this.displayChar,overwrite:this.overwrite},this.blocks[A]));F&&(this._blocks.push(F),this._maskedBlocks[A]||(this._maskedBlocks[A]=[]),this._maskedBlocks[A].push(this._blocks.length-1)),a+=A.length-1;continue}}let l=e[a],h=l in t;if(l===p.STOP_CHAR){this._stops.push(this._blocks.length);continue}if(l==="{"||l==="}"){s=!s;continue}if(l==="["||l==="]"){n=!n;continue}if(l===p.ESCAPE_CHAR){if(++a,l=e[a],!l)break;h=!1}const m=(i=t[l])!==null&&i!==void 0&&i.mask&&!(((u=t[l])===null||u===void 0?void 0:u.mask.prototype)instanceof d.Masked)?t[l]:{mask:t[l]},_=h?new L(Object.assign({parent:this,isOptional:n,lazy:this.lazy,eager:this.eager,placeholderChar:this.placeholderChar,displayChar:this.displayChar},m)):new N({char:l,eager:this.eager,isUnmasking:s});this._blocks.push(_)}}get state(){return Object.assign({},super.state,{_blocks:this._blocks.map(t=>t.state)})}set state(t){const{_blocks:e}=t,s=S(t,Q);this._blocks.forEach((n,i)=>n.state=e[i]),super.state=s}reset(){super.reset(),this._blocks.forEach(t=>t.reset())}get isComplete(){return this._blocks.every(t=>t.isComplete)}get isFilled(){return this._blocks.every(t=>t.isFilled)}get isFixed(){return this._blocks.every(t=>t.isFixed)}get isOptional(){return this._blocks.every(t=>t.isOptional)}doCommit(){this._blocks.forEach(t=>t.doCommit()),super.doCommit()}get unmaskedValue(){return this._blocks.reduce((t,e)=>t+=e.unmaskedValue,"")}set unmaskedValue(t){super.unmaskedValue=t}get value(){return this._blocks.reduce((t,e)=>t+=e.value,"")}set value(t){super.value=t}get displayValue(){return this._blocks.reduce((t,e)=>t+=e.displayValue,"")}appendTail(t){return super.appendTail(t).aggregate(this._appendPlaceholder())}_appendEager(){var t;const e=new c;let s=(t=this._mapPosToBlock(this.value.length))===null||t===void 0?void 0:t.index;if(s==null)return e;this._blocks[s].isFilled&&++s;for(let n=s;n<this._blocks.length;++n){const i=this._blocks[n]._appendEager();if(!i.inserted)break;e.aggregate(i)}return e}_appendCharRaw(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const s=this._mapPosToBlock(this.value.length),n=new c;if(!s)return n;for(let a=s.index;;++a){var i,u;const l=this._blocks[a];if(!l)break;const h=l._appendChar(t,Object.assign({},e,{_beforeTailState:(i=e._beforeTailState)===null||i===void 0||(u=i._blocks)===null||u===void 0?void 0:u[a]})),m=h.skip;if(n.aggregate(h),m||h.rawInserted)break}return n}extractTail(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;const s=new v;return t===e||this._forEachBlocksInRange(t,e,(n,i,u,a)=>{const l=n.extractTail(u,a);l.stop=this._findStopBefore(i),l.from=this._blockStartPos(i),l instanceof v&&(l.blockIndex=i),s.extend(l)}),s}extractInput(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(t===e)return"";let n="";return this._forEachBlocksInRange(t,e,(i,u,a,l)=>{n+=i.extractInput(a,l,s)}),n}_findStopBefore(t){let e;for(let s=0;s<this._stops.length;++s){const n=this._stops[s];if(n<=t)e=n;else break}return e}_appendPlaceholder(t){const e=new c;if(this.lazy&&t==null)return e;const s=this._mapPosToBlock(this.value.length);if(!s)return e;const n=s.index,i=t??this._blocks.length;return this._blocks.slice(n,i).forEach(u=>{if(!u.lazy||t!=null){const a=u._blocks!=null?[u._blocks.length]:[],l=u._appendPlaceholder(...a);this._value+=l.inserted,e.aggregate(l)}}),e}_mapPosToBlock(t){let e="";for(let s=0;s<this._blocks.length;++s){const n=this._blocks[s],i=e.length;if(e+=n.value,t<=e.length)return{index:s,offset:t-i}}}_blockStartPos(t){return this._blocks.slice(0,t).reduce((e,s)=>e+=s.value.length,0)}_forEachBlocksInRange(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,s=arguments.length>2?arguments[2]:void 0;const n=this._mapPosToBlock(t);if(n){const i=this._mapPosToBlock(e),u=i&&n.index===i.index,a=n.offset,l=i&&u?i.offset:this._blocks[n.index].value.length;if(s(this._blocks[n.index],n.index,a,l),i&&!u){for(let h=n.index+1;h<i.index;++h)s(this._blocks[h],h,0,this._blocks[h].value.length);s(this._blocks[i.index],i.index,0,i.offset)}}}remove(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;const s=super.remove(t,e);return this._forEachBlocksInRange(t,e,(n,i,u,a)=>{s.aggregate(n.remove(u,a))}),s}nearestInputPos(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:o.NONE;if(!this._blocks.length)return 0;const s=new W(this,t);if(e===o.NONE)return s.pushRightBeforeInput()||(s.popState(),s.pushLeftBeforeInput())?s.pos:this.value.length;if(e===o.LEFT||e===o.FORCE_LEFT){if(e===o.LEFT){if(s.pushRightBeforeFilled(),s.ok&&s.pos===t)return t;s.popState()}if(s.pushLeftBeforeInput(),s.pushLeftBeforeRequired(),s.pushLeftBeforeFilled(),e===o.LEFT){if(s.pushRightBeforeInput(),s.pushRightBeforeRequired(),s.ok&&s.pos<=t||(s.popState(),s.ok&&s.pos<=t))return s.pos;s.popState()}return s.ok?s.pos:e===o.FORCE_LEFT?0:(s.popState(),s.ok||(s.popState(),s.ok)?s.pos:0)}return e===o.RIGHT||e===o.FORCE_RIGHT?(s.pushRightBeforeInput(),s.pushRightBeforeRequired(),s.pushRightBeforeFilled()?s.pos:e===o.FORCE_RIGHT?this.value.length:(s.popState(),s.ok||(s.popState(),s.ok)?s.pos:this.nearestInputPos(t,o.LEFT))):t}totalInputPositions(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,s=0;return this._forEachBlocksInRange(t,e,(n,i,u,a)=>{s+=n.totalInputPositions(u,a)}),s}maskedBlock(t){return this.maskedBlocks(t)[0]}maskedBlocks(t){const e=this._maskedBlocks[t];return e?e.map(s=>this._blocks[s]):[]}}p.DEFAULTS={lazy:!0,placeholderChar:"_"};p.STOP_CHAR="`";p.ESCAPE_CHAR="\\";p.InputDefinition=L;p.FixedDefinition=N;d.MaskedPattern=p;class T extends p{get _matchFrom(){return this.maxLength-String(this.from).length}_update(t){t=Object.assign({to:this.to||0,from:this.from||0,maxLength:this.maxLength||0},t);let e=String(t.to).length;t.maxLength!=null&&(e=Math.max(e,t.maxLength)),t.maxLength=e;const s=String(t.from).padStart(e,"0"),n=String(t.to).padStart(e,"0");let i=0;for(;i<n.length&&n[i]===s[i];)++i;t.mask=n.slice(0,i).replace(/0/g,"\\0")+"0".repeat(e-i),super._update(t)}get isComplete(){return super.isComplete&&!!this.value}boundaries(t){let e="",s="";const[,n,i]=t.match(/^(\D*)(\d*)(\D*)/)||[];return i&&(e="0".repeat(n.length)+i,s="9".repeat(n.length)+i),e=e.padEnd(this.maxLength,"0"),s=s.padEnd(this.maxLength,"9"),[e,s]}doPrepare(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s;if([t,s]=D(super.doPrepare(t.replace(/\D/g,""),e)),!this.autofix||!t)return t;const n=String(this.from).padStart(this.maxLength,"0"),i=String(this.to).padStart(this.maxLength,"0");let u=this.value+t;if(u.length>this.maxLength)return"";const[a,l]=this.boundaries(u);return Number(l)<this.from?n[u.length-1]:Number(a)>this.to?this.autofix==="pad"&&u.length<this.maxLength?["",s.aggregate(this.append(n[u.length-1]+t,e))]:i[u.length-1]:t}doValidate(){const t=this.value;if(t.search(/[^0]/)===-1&&t.length<=this._matchFrom)return!0;const[s,n]=this.boundaries(t);return this.from<=Number(n)&&Number(s)<=this.to&&super.doValidate(...arguments)}}d.MaskedRange=T;class b extends p{constructor(t){super(Object.assign({},b.DEFAULTS,t))}_update(t){t.mask===Date&&delete t.mask,t.pattern&&(t.mask=t.pattern);const e=t.blocks;t.blocks=Object.assign({},b.GET_DEFAULT_BLOCKS()),t.min&&(t.blocks.Y.from=t.min.getFullYear()),t.max&&(t.blocks.Y.to=t.max.getFullYear()),t.min&&t.max&&t.blocks.Y.from===t.blocks.Y.to&&(t.blocks.m.from=t.min.getMonth()+1,t.blocks.m.to=t.max.getMonth()+1,t.blocks.m.from===t.blocks.m.to&&(t.blocks.d.from=t.min.getDate(),t.blocks.d.to=t.max.getDate())),Object.assign(t.blocks,this.blocks,e),Object.keys(t.blocks).forEach(s=>{const n=t.blocks[s];!("autofix"in n)&&"autofix"in t&&(n.autofix=t.autofix)}),super._update(t)}doValidate(){const t=this.date;return super.doValidate(...arguments)&&(!this.isComplete||this.isDateExist(this.value)&&t!=null&&(this.min==null||this.min<=t)&&(this.max==null||t<=this.max))}isDateExist(t){return this.format(this.parse(t,this),this).indexOf(t)>=0}get date(){return this.typedValue}set date(t){this.typedValue=t}get typedValue(){return this.isComplete?super.typedValue:null}set typedValue(t){super.typedValue=t}maskEquals(t){return t===Date||super.maskEquals(t)}}b.DEFAULTS={pattern:"d{.}`m{.}`Y",format:r=>{if(!r)return"";const t=String(r.getDate()).padStart(2,"0"),e=String(r.getMonth()+1).padStart(2,"0"),s=r.getFullYear();return[t,e,s].join(".")},parse:r=>{const[t,e,s]=r.split(".");return new Date(s,e-1,t)}};b.GET_DEFAULT_BLOCKS=()=>({d:{mask:T,from:1,to:31,maxLength:2},m:{mask:T,from:1,to:12,maxLength:2},Y:{mask:T,from:1900,to:9999}});d.MaskedDate=b;class y{get selectionStart(){let t;try{t=this._unsafeSelectionStart}catch{}return t??this.value.length}get selectionEnd(){let t;try{t=this._unsafeSelectionEnd}catch{}return t??this.value.length}select(t,e){if(!(t==null||e==null||t===this.selectionStart&&e===this.selectionEnd))try{this._unsafeSelect(t,e)}catch{}}_unsafeSelect(t,e){}get isActive(){return!1}bindEvents(t){}unbindEvents(){}}d.MaskElement=y;class B extends y{constructor(t){super(),this.input=t,this._handlers={}}get rootElement(){var t,e,s;return(t=(e=(s=this.input).getRootNode)===null||e===void 0?void 0:e.call(s))!==null&&t!==void 0?t:document}get isActive(){return this.input===this.rootElement.activeElement}get _unsafeSelectionStart(){return this.input.selectionStart}get _unsafeSelectionEnd(){return this.input.selectionEnd}_unsafeSelect(t,e){this.input.setSelectionRange(t,e)}get value(){return this.input.value}set value(t){this.input.value=t}bindEvents(t){Object.keys(t).forEach(e=>this._toggleEventHandler(B.EVENTS_MAP[e],t[e]))}unbindEvents(){Object.keys(this._handlers).forEach(t=>this._toggleEventHandler(t))}_toggleEventHandler(t,e){this._handlers[t]&&(this.input.removeEventListener(t,this._handlers[t]),delete this._handlers[t]),e&&(this.input.addEventListener(t,e),this._handlers[t]=e)}}B.EVENTS_MAP={selectionChange:"keydown",input:"input",drop:"drop",click:"click",focus:"focus",commit:"blur"};d.HTMLMaskElement=B;class j extends B{get _unsafeSelectionStart(){const t=this.rootElement,e=t.getSelection&&t.getSelection(),s=e&&e.anchorOffset,n=e&&e.focusOffset;return n==null||s==null||s<n?s:n}get _unsafeSelectionEnd(){const t=this.rootElement,e=t.getSelection&&t.getSelection(),s=e&&e.anchorOffset,n=e&&e.focusOffset;return n==null||s==null||s>n?s:n}_unsafeSelect(t,e){if(!this.rootElement.createRange)return;const s=this.rootElement.createRange();s.setStart(this.input.firstChild||this.input,t),s.setEnd(this.input.lastChild||this.input,e);const n=this.rootElement,i=n.getSelection&&n.getSelection();i&&(i.removeAllRanges(),i.addRange(s))}get value(){return this.input.textContent}set value(t){this.input.textContent=t}}d.HTMLContenteditableMaskElement=j;const tt=["mask"];class et{constructor(t,e){this.el=t instanceof y?t:t.isContentEditable&&t.tagName!=="INPUT"&&t.tagName!=="TEXTAREA"?new j(t):new B(t),this.masked=E(e),this._listeners={},this._value="",this._unmaskedValue="",this._saveSelection=this._saveSelection.bind(this),this._onInput=this._onInput.bind(this),this._onChange=this._onChange.bind(this),this._onDrop=this._onDrop.bind(this),this._onFocus=this._onFocus.bind(this),this._onClick=this._onClick.bind(this),this.alignCursor=this.alignCursor.bind(this),this.alignCursorFriendly=this.alignCursorFriendly.bind(this),this._bindEvents(),this.updateValue(),this._onChange()}get mask(){return this.masked.mask}maskEquals(t){var e;return t==null||((e=this.masked)===null||e===void 0?void 0:e.maskEquals(t))}set mask(t){if(this.maskEquals(t))return;if(!(t instanceof d.Masked)&&this.masked.constructor===O(t)){this.masked.updateOptions({mask:t});return}const e=E({mask:t});e.unmaskedValue=this.masked.unmaskedValue,this.masked=e}get value(){return this._value}set value(t){this.value!==t&&(this.masked.value=t,this.updateControl(),this.alignCursor())}get unmaskedValue(){return this._unmaskedValue}set unmaskedValue(t){this.unmaskedValue!==t&&(this.masked.unmaskedValue=t,this.updateControl(),this.alignCursor())}get typedValue(){return this.masked.typedValue}set typedValue(t){this.masked.typedValueEquals(t)||(this.masked.typedValue=t,this.updateControl(),this.alignCursor())}get displayValue(){return this.masked.displayValue}_bindEvents(){this.el.bindEvents({selectionChange:this._saveSelection,input:this._onInput,drop:this._onDrop,click:this._onClick,focus:this._onFocus,commit:this._onChange})}_unbindEvents(){this.el&&this.el.unbindEvents()}_fireEvent(t){for(var e=arguments.length,s=new Array(e>1?e-1:0),n=1;n<e;n++)s[n-1]=arguments[n];const i=this._listeners[t];i&&i.forEach(u=>u(...s))}get selectionStart(){return this._cursorChanging?this._changingCursorPos:this.el.selectionStart}get cursorPos(){return this._cursorChanging?this._changingCursorPos:this.el.selectionEnd}set cursorPos(t){!this.el||!this.el.isActive||(this.el.select(t,t),this._saveSelection())}_saveSelection(){this.displayValue!==this.el.value&&console.warn("Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly."),this._selection={start:this.selectionStart,end:this.cursorPos}}updateValue(){this.masked.value=this.el.value,this._value=this.masked.value}updateControl(){const t=this.masked.unmaskedValue,e=this.masked.value,s=this.displayValue,n=this.unmaskedValue!==t||this.value!==e;this._unmaskedValue=t,this._value=e,this.el.value!==s&&(this.el.value=s),n&&this._fireChangeEvents()}updateOptions(t){const{mask:e}=t,s=S(t,tt),n=!this.maskEquals(e),i=!P(this.masked,s);n&&(this.mask=e),i&&this.masked.updateOptions(s),(n||i)&&this.updateControl()}updateCursor(t){t!=null&&(this.cursorPos=t,this._delayUpdateCursor(t))}_delayUpdateCursor(t){this._abortUpdateCursor(),this._changingCursorPos=t,this._cursorChanging=setTimeout(()=>{this.el&&(this.cursorPos=this._changingCursorPos,this._abortUpdateCursor())},10)}_fireChangeEvents(){this._fireEvent("accept",this._inputEvent),this.masked.isComplete&&this._fireEvent("complete",this._inputEvent)}_abortUpdateCursor(){this._cursorChanging&&(clearTimeout(this._cursorChanging),delete this._cursorChanging)}alignCursor(){this.cursorPos=this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos,o.LEFT))}alignCursorFriendly(){this.selectionStart===this.cursorPos&&this.alignCursor()}on(t,e){return this._listeners[t]||(this._listeners[t]=[]),this._listeners[t].push(e),this}off(t,e){if(!this._listeners[t])return this;if(!e)return delete this._listeners[t],this;const s=this._listeners[t].indexOf(e);return s>=0&&this._listeners[t].splice(s,1),this}_onInput(t){if(this._inputEvent=t,this._abortUpdateCursor(),!this._selection)return this.updateValue();const e=new $(this.el.value,this.cursorPos,this.displayValue,this._selection),s=this.masked.rawInputValue,n=this.masked.splice(e.startChangePos,e.removed.length,e.inserted,e.removeDirection,{input:!0,raw:!0}).offset,i=s===this.masked.rawInputValue?e.removeDirection:o.NONE;let u=this.masked.nearestInputPos(e.startChangePos+n,i);i!==o.NONE&&(u=this.masked.nearestInputPos(u,o.NONE)),this.updateControl(),this.updateCursor(u),delete this._inputEvent}_onChange(){this.displayValue!==this.el.value&&this.updateValue(),this.masked.doCommit(),this.updateControl(),this._saveSelection()}_onDrop(t){t.preventDefault(),t.stopPropagation()}_onFocus(t){this.alignCursorFriendly()}_onClick(t){this.alignCursorFriendly()}destroy(){this._unbindEvents(),this._listeners.length=0,delete this.el}}d.InputMask=et;class st extends p{_update(t){t.enum&&(t.mask="*".repeat(t.enum[0].length)),super._update(t)}doValidate(){return this.enum.some(t=>t.indexOf(this.unmaskedValue)>=0)&&super.doValidate(...arguments)}}d.MaskedEnum=st;class f extends g{constructor(t){super(Object.assign({},f.DEFAULTS,t))}_update(t){super._update(t),this._updateRegExps()}_updateRegExps(){let t="^"+(this.allowNegative?"[+|\\-]?":""),e="\\d*",s=(this.scale?"(".concat(I(this.radix),"\\d{0,").concat(this.scale,"})?"):"")+"$";this._numberRegExp=new RegExp(t+e+s),this._mapToRadixRegExp=new RegExp("[".concat(this.mapToRadix.map(I).join(""),"]"),"g"),this._thousandsSeparatorRegExp=new RegExp(I(this.thousandsSeparator),"g")}_removeThousandsSeparators(t){return t.replace(this._thousandsSeparatorRegExp,"")}_insertThousandsSeparators(t){const e=t.split(this.radix);return e[0]=e[0].replace(/\B(?=(\d{3})+(?!\d))/g,this.thousandsSeparator),e.join(this.radix)}doPrepare(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};t=this._removeThousandsSeparators(this.scale&&this.mapToRadix.length&&(e.input&&e.raw||!e.input&&!e.raw)?t.replace(this._mapToRadixRegExp,this.radix):t);const[s,n]=D(super.doPrepare(t,e));return t&&!s&&(n.skip=!0),[s,n]}_separatorsCount(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,s=0;for(let n=0;n<t;++n)this._value.indexOf(this.thousandsSeparator,n)===n&&(++s,e&&(t+=this.thousandsSeparator.length));return s}_separatorsCountFromSlice(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:this._value;return this._separatorsCount(this._removeThousandsSeparators(t).length,!0)}extractInput(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length,s=arguments.length>2?arguments[2]:void 0;return[t,e]=this._adjustRangeWithSeparators(t,e),this._removeThousandsSeparators(super.extractInput(t,e,s))}_appendCharRaw(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!this.thousandsSeparator)return super._appendCharRaw(t,e);const s=e.tail&&e._beforeTailState?e._beforeTailState._value:this._value,n=this._separatorsCountFromSlice(s);this._value=this._removeThousandsSeparators(this.value);const i=super._appendCharRaw(t,e);this._value=this._insertThousandsSeparators(this._value);const u=e.tail&&e._beforeTailState?e._beforeTailState._value:this._value,a=this._separatorsCountFromSlice(u);return i.tailShift+=(a-n)*this.thousandsSeparator.length,i.skip=!i.rawInserted&&t===this.thousandsSeparator,i}_findSeparatorAround(t){if(this.thousandsSeparator){const e=t-this.thousandsSeparator.length+1,s=this.value.indexOf(this.thousandsSeparator,e);if(s<=t)return s}return-1}_adjustRangeWithSeparators(t,e){const s=this._findSeparatorAround(t);s>=0&&(t=s);const n=this._findSeparatorAround(e);return n>=0&&(e=n+this.thousandsSeparator.length),[t,e]}remove(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:0,e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:this.value.length;[t,e]=this._adjustRangeWithSeparators(t,e);const s=this.value.slice(0,t),n=this.value.slice(e),i=this._separatorsCount(s.length);this._value=this._insertThousandsSeparators(this._removeThousandsSeparators(s+n));const u=this._separatorsCountFromSlice(s);return new c({tailShift:(u-i)*this.thousandsSeparator.length})}nearestInputPos(t,e){if(!this.thousandsSeparator)return t;switch(e){case o.NONE:case o.LEFT:case o.FORCE_LEFT:{const s=this._findSeparatorAround(t-1);if(s>=0){const n=s+this.thousandsSeparator.length;if(t<n||this.value.length<=n||e===o.FORCE_LEFT)return s}break}case o.RIGHT:case o.FORCE_RIGHT:{const s=this._findSeparatorAround(t);if(s>=0)return s+this.thousandsSeparator.length}}return t}doValidate(t){let e=!!this._removeThousandsSeparators(this.value).match(this._numberRegExp);if(e){const s=this.number;e=e&&!isNaN(s)&&(this.min==null||this.min>=0||this.min<=this.number)&&(this.max==null||this.max<=0||this.number<=this.max)}return e&&super.doValidate(t)}doCommit(){if(this.value){const t=this.number;let e=t;this.min!=null&&(e=Math.max(e,this.min)),this.max!=null&&(e=Math.min(e,this.max)),e!==t&&(this.unmaskedValue=this.doFormat(e));let s=this.value;this.normalizeZeros&&(s=this._normalizeZeros(s)),this.padFractionalZeros&&this.scale>0&&(s=this._padFractionalZeros(s)),this._value=s}super.doCommit()}_normalizeZeros(t){const e=this._removeThousandsSeparators(t).split(this.radix);return e[0]=e[0].replace(/^(\D*)(0*)(\d*)/,(s,n,i,u)=>n+u),t.length&&!/\d$/.test(e[0])&&(e[0]=e[0]+"0"),e.length>1&&(e[1]=e[1].replace(/0*$/,""),e[1].length||(e.length=1)),this._insertThousandsSeparators(e.join(this.radix))}_padFractionalZeros(t){if(!t)return t;const e=t.split(this.radix);return e.length<2&&e.push(""),e[1]=e[1].padEnd(this.scale,"0"),e.join(this.radix)}doSkipInvalid(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=arguments.length>2?arguments[2]:void 0;const n=this.scale===0&&t!==this.thousandsSeparator&&(t===this.radix||t===f.UNMASKED_RADIX||this.mapToRadix.includes(t));return super.doSkipInvalid(t,e,s)&&!n}get unmaskedValue(){return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix,f.UNMASKED_RADIX)}set unmaskedValue(t){super.unmaskedValue=t}get typedValue(){return this.doParse(this.unmaskedValue)}set typedValue(t){this.rawInputValue=this.doFormat(t).replace(f.UNMASKED_RADIX,this.radix)}get number(){return this.typedValue}set number(t){this.typedValue=t}get allowNegative(){return this.signed||this.min!=null&&this.min<0||this.max!=null&&this.max<0}typedValueEquals(t){return(super.typedValueEquals(t)||f.EMPTY_VALUES.includes(t)&&f.EMPTY_VALUES.includes(this.typedValue))&&!(t===0&&this.value==="")}}f.UNMASKED_RADIX=".";f.DEFAULTS={radix:",",thousandsSeparator:"",mapToRadix:[f.UNMASKED_RADIX],scale:2,signed:!1,normalizeZeros:!0,padFractionalZeros:!1,parse:Number,format:r=>r.toLocaleString("en-US",{useGrouping:!1,maximumFractionDigits:20})};f.EMPTY_VALUES=[...g.EMPTY_VALUES,0];d.MaskedNumber=f;class nt extends g{_update(t){t.mask&&(t.validate=t.mask),super._update(t)}}d.MaskedFunction=nt;const it=["compiledMasks","currentMaskRef","currentMask"],ut=["mask"];class M extends g{constructor(t){super(Object.assign({},M.DEFAULTS,t)),this.currentMask=null}_update(t){super._update(t),"mask"in t&&(this.compiledMasks=Array.isArray(t.mask)?t.mask.map(e=>E(e)):[])}_appendCharRaw(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const s=this._applyDispatch(t,e);return this.currentMask&&s.aggregate(this.currentMask._appendChar(t,this.currentMaskFlags(e))),s}_applyDispatch(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"";const n=e.tail&&e._beforeTailState!=null?e._beforeTailState._value:this.value,i=this.rawInputValue,u=e.tail&&e._beforeTailState!=null?e._beforeTailState._rawInputValue:i,a=i.slice(u.length),l=this.currentMask,h=new c,m=l==null?void 0:l.state;if(this.currentMask=this.doDispatch(t,Object.assign({},e),s),this.currentMask)if(this.currentMask!==l){if(this.currentMask.reset(),u){const _=this.currentMask.append(u,{raw:!0});h.tailShift=_.inserted.length-n.length}a&&(h.tailShift+=this.currentMask.append(a,{raw:!0,tail:!0}).tailShift)}else this.currentMask.state=m;return h}_appendPlaceholder(){const t=this._applyDispatch(...arguments);return this.currentMask&&t.aggregate(this.currentMask._appendPlaceholder()),t}_appendEager(){const t=this._applyDispatch(...arguments);return this.currentMask&&t.aggregate(this.currentMask._appendEager()),t}appendTail(t){const e=new c;return t&&e.aggregate(this._applyDispatch("",{},t)),e.aggregate(this.currentMask?this.currentMask.appendTail(t):super.appendTail(t))}currentMaskFlags(t){var e,s;return Object.assign({},t,{_beforeTailState:((e=t._beforeTailState)===null||e===void 0?void 0:e.currentMaskRef)===this.currentMask&&((s=t._beforeTailState)===null||s===void 0?void 0:s.currentMask)||t._beforeTailState})}doDispatch(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"";return this.dispatch(t,this,e,s)}doValidate(t){return super.doValidate(t)&&(!this.currentMask||this.currentMask.doValidate(this.currentMaskFlags(t)))}doPrepare(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},[s,n]=D(super.doPrepare(t,e));if(this.currentMask){let i;[s,i]=D(super.doPrepare(s,this.currentMaskFlags(e))),n=n.aggregate(i)}return[s,n]}reset(){var t;(t=this.currentMask)===null||t===void 0||t.reset(),this.compiledMasks.forEach(e=>e.reset())}get value(){return this.currentMask?this.currentMask.value:""}set value(t){super.value=t}get unmaskedValue(){return this.currentMask?this.currentMask.unmaskedValue:""}set unmaskedValue(t){super.unmaskedValue=t}get typedValue(){return this.currentMask?this.currentMask.typedValue:""}set typedValue(t){let e=String(t);this.currentMask&&(this.currentMask.typedValue=t,e=this.currentMask.unmaskedValue),this.unmaskedValue=e}get displayValue(){return this.currentMask?this.currentMask.displayValue:""}get isComplete(){var t;return!!(!((t=this.currentMask)===null||t===void 0)&&t.isComplete)}get isFilled(){var t;return!!(!((t=this.currentMask)===null||t===void 0)&&t.isFilled)}remove(){const t=new c;return this.currentMask&&t.aggregate(this.currentMask.remove(...arguments)).aggregate(this._applyDispatch()),t}get state(){var t;return Object.assign({},super.state,{_rawInputValue:this.rawInputValue,compiledMasks:this.compiledMasks.map(e=>e.state),currentMaskRef:this.currentMask,currentMask:(t=this.currentMask)===null||t===void 0?void 0:t.state})}set state(t){const{compiledMasks:e,currentMaskRef:s,currentMask:n}=t,i=S(t,it);this.compiledMasks.forEach((u,a)=>u.state=e[a]),s!=null&&(this.currentMask=s,this.currentMask.state=n),super.state=i}extractInput(){return this.currentMask?this.currentMask.extractInput(...arguments):""}extractTail(){return this.currentMask?this.currentMask.extractTail(...arguments):super.extractTail(...arguments)}doCommit(){this.currentMask&&this.currentMask.doCommit(),super.doCommit()}nearestInputPos(){return this.currentMask?this.currentMask.nearestInputPos(...arguments):super.nearestInputPos(...arguments)}get overwrite(){return this.currentMask?this.currentMask.overwrite:super.overwrite}set overwrite(t){console.warn('"overwrite" option is not available in dynamic mask, use this option in siblings')}get eager(){return this.currentMask?this.currentMask.eager:super.eager}set eager(t){console.warn('"eager" option is not available in dynamic mask, use this option in siblings')}get skipInvalid(){return this.currentMask?this.currentMask.skipInvalid:super.skipInvalid}set skipInvalid(t){(this.isInitialized||t!==g.DEFAULTS.skipInvalid)&&console.warn('"skipInvalid" option is not available in dynamic mask, use this option in siblings')}maskEquals(t){return Array.isArray(t)&&this.compiledMasks.every((e,s)=>{if(!t[s])return;const n=t[s],{mask:i}=n,u=S(n,ut);return P(e,u)&&e.maskEquals(i)})}typedValueEquals(t){var e;return!!(!((e=this.currentMask)===null||e===void 0)&&e.typedValueEquals(t))}}M.DEFAULTS={dispatch:(r,t,e,s)=>{if(!t.compiledMasks.length)return;const n=t.rawInputValue,i=t.compiledMasks.map((u,a)=>{const l=t.currentMask===u,h=l?u.value.length:u.nearestInputPos(u.value.length,o.FORCE_LEFT);return u.rawInputValue!==n?(u.reset(),u.append(n,{raw:!0})):l||u.remove(h),u.append(r,t.currentMaskFlags(e)),u.appendTail(s),{index:a,weight:u.rawInputValue.length,totalInputPositions:u.totalInputPositions(0,Math.max(h,u.nearestInputPos(u.value.length,o.FORCE_LEFT)))}});return i.sort((u,a)=>a.weight-u.weight||a.totalInputPositions-u.totalInputPositions),t.compiledMasks[i[0].index]}};d.MaskedDynamic=M;const w={MASKED:"value",UNMASKED:"unmaskedValue",TYPED:"typedValue"};function U(r){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:w.MASKED,e=arguments.length>2&&arguments[2]!==void 0?arguments[2]:w.MASKED;const s=E(r);return n=>s.runIsolated(i=>(i[t]=n,i[e]))}function rt(r){for(var t=arguments.length,e=new Array(t>1?t-1:0),s=1;s<t;s++)e[s-1]=arguments[s];return U(...e)(r)}d.PIPE_TYPE=w;d.createPipe=U;d.pipe=rt;try{globalThis.IMask=d}catch{}const at=["3D-аниматор","3D-визуализатор","3D-моделлер","3D-художник","Абразивоструйщик","Аварийный комиссар","Авиадиспетчер","Авиатор","Авиационный инженер","Авиационный механик","Авиационный техник (Авиатехник)","Автогонщик","Автозаправщик","Автоинструктор","Автоменеджер","Автомеханик","Автооценщик","Автослесарь","Автоэксперт","Агент","Агент коммерческий","Агент по сбыту энергии","Агент по туризму","Агент рекламный","Аграрий","Агробиолог","Агроинженер","Агроном","Агрохимик","Адвокат","Администратор","Администратор баз данных","Администратор вычислительной сети","Администратор гостиницы","Администратор защиты","Администратор предприятия торговли","Администратор ресторана","Администратор сайта","Администратор салона красоты","Акробат","Актёр","Актёр театра и кино","Актёр театра кукол","Актуарий","Акушер","Акушер-гинеколог","Акушерка","Алеипты","Аллерголог","Альмея","Альпинист","Альфа-тестер","Аналитик","Аналитик программного обеспечения","Андеррайтер","Андролог","Анестезиолог","Аниматор","Антикоррозийщик","Антрепренёр","Аппаратчик","Аппаратчик-оператор","Аптекарь","Аранжировщик","Арборист","Арматурщик","Арт-директор","Артист","Артист балета","Артист оркестра (ансамбля)","Артист театра","Артист хора (ансамбля)","Артист цирка","Артист эстрады","Археолог","Архивариус","Архивист","Архитектор","Архитектор программного обеспечения","Архитектор-проектировщик","Архитектор-реставратор","Архиятр","Ассистент менеджера по продажам","Ассистент режиссера","Ассистент режиссера по актёрам","Астролог","Астроном","Астрофизик","Атомщик","Аудитор","Аукционист","Аэрографист","Балерина","Балетмейстер","Бальзамировщик","Бандерильеро","Банкир","Банковский кассир-операционист","Банковский работник","Бариста","Бармен","Берейтор","Бестиарий (гладиатор)","Бета-тестер","Бетонщик","Библиограф","Библиотекарь","Бизнес-аналитик","Бизнес-консультант","Бизнес-тренер","Бизнесмен","Билетёр","Билетный кассир","Биндюжник","Биоинженер","Биолог","Бионик","Биотехнолог","Биофизик","Биохимик","Блогер","Больничный клоун","Бондарь","Бортинженер","Бортмеханик","Бортпроводник","Ботаник","Боцман","Бренд-дизайнер","Бренд-менеджер","Бригадир железнодорожного пути","Брокер","Букмекер","Булочник","Бульдозерист","Бурильщик","Бурлак","Бухгалтер","Бэк-энд разработчик","Вагранщик","Вальцовщик стана горячей прокатки","Веб-аналитик","Веб-мастер","Веб-программист","Веб-разработчик","Ведущий","Ведущий новостей","Ведущий программист","Ведущий радио и телевидения","Ведущий телевидения","Венеролог","Верстальщик","Ветеринар","Ветеринарный фельдшер","Видеооператор","Визажист","Виноградарь","Винодел","Вирусолог","Водитель","Водитель автобуса","Водитель трамвая","Водитель тролейбуса","Водитель троллейбуса","Водолаз","Военнослужащий","Военный","Военный врач","Военный лётчик","Воздухоплаватель","Воин","Воспитатель","Воспитатель детского сада","Востоковед","Врач","Врач общей практики","Врач скорой помощи","Врач-диетолог","Врач-косметолог","Врач-ординатор","Врач-терапевт","Врачебная практика","Второй режиссёр","Выпускающий редактор","Высотник","Вычислитель","Вышибала","Вышивальщица","Вышкомонтажник","Гавази","Гардеробмейстер","Гастроэнтеролог","Гейм-дизайнер","Геймдизайнер","Гейша","Генеалог","Генеральный секретарь","Генетик","Генный инженер","Географ","Высотник","Вычислитель","Вышибала","Вышивальщица","Вышкомонтажник","Гавази","Гардеробмейстер","Гастроэнтеролог","Гейм-дизайнер","Геймдизайнер","Гейша","Генеалог","Генеральный секретарь","Генетик","Генный инженер","Географ","Геодезист","Геолог","Геофизик","Геоэколог","Герольд","Геронтолог","Гигиенист стоматологический","Гид-переводчик","Гид-экскурсовод","Гидролог","Гидротехник","Гинеколог","Гитарный мастер","Главный инженер","Главный конструктор","Главный режиссер канала","Главный технолог","Горновой","Горный инженер","Горный проводник","Горняк","Горшечник","Государственный служащий","Графический дизайнер","Гримёр","Гример-постижер","Грузчик","Гувернантка","Дальнобойщик","Дворник","Девелопер","Дегустатор","Декоратор","Делопроизводитель","Дерматовенеролог","Дерматолог","Детектив","Дефектолог","Деятель культуры","Деятель экономики","Джоббер","Диагност","Диджей (DJ)","Диетолог","Дизайнер","Дизайнер интерьеров","Дизайнер ландшафта","Дизайнер одежды","Дизайнер рекламных агентств","Дизайнер рекламы","Дизайнер-модельер","Диктор","Дипломат","Директор по маркетингу","Директора совхоза","Дирижер","Диспетчер","Диспетчер по центровке самолетов","Диспетчер трансагентства","Диспетчер управления воздушным движением","Дистрибутор","Документовед","Дорожный инспектор","Дорожный рабочий","Доярка","Драматург","Драпировщик","Дрессировщик","Дрэг-квин","Егерь","Египтолог","Естествоиспытатель","Железнодорожник","Животновод","Жокей","Журналист","Заведующий лабораторией","Заведующий складом","Заведующий труппой","Заклинание змей","Закройщик","Заточник","Звукооператор","Звукорежиссер","Землеустроитель","Змеелов","Знахарь","Зоолог","Зубной техник","Игровое сообщество","Издатель","Изобретатель","Изограф","Иконописец","Иллюзионист","Иллюстратор","Имиджмейкер","Иммунолог","Инженер","Инженер бюро технической инвентаризации","Инженер на предприятиях сервисного обслуживания медицинской техники","Инженер по автоматизации и механизации производственных процессов","Инженер по землеустройству","Инженер по организации перевозок и управлению на транспорте","Инженер по охране труда","Инженер связи","Инженер сети","Инженер-испытатель","Инженер-конструктор","Инженер-конструктор радиоэлектронной аппаратуры","Инженер-проектировщик","Инженер-строитель","Инженер-технолог","Инженер-химик","Инженер-эколог","Инженер-энергетик","Инкассатор","Инспектор ГИБДД","Инспектор отдела по делам несовершеннолетних","Инспектор по досмотру","Инструктор по видам спорта","Инструктор по вождению автомобиля","Инструктор по фитнесу","Интеллектуал","Интервьюер","Интернет-маркетолог","Инфекционист","Информационный работник","Искусствовед","Испытатель","Исследователь","Историк","ИТ-евангелист","ИТ-пропагандист","ИТ-специалист","Ихтиолог","Калькулятор","Каменщик","Канатоходец","Капельдинер","Капитан порта","Капитан судна","Капитан яхты","Кардиолог","Кардиохирург","Карикатурист","Картограф","Каскадер","Кассир","Квартирмейстер","Квасник","Кибернетик","Киберспортсмен","Кинематографист","Кинодраматург","Кинолог","Киномеханик","Кинооператор","Кинопродюсер","Кинорежиссер","Кисэн","Кладовщик","Клакёр","Клинический психолог","Клоун","Клубный промоутер","Книгопечатник","Ковбой","Кодер","Кок","Колорист","Колорист автоэмалей","Комбайнер","Комментатор","Коммерческий директор","Композитор","Комьюнити-менеджер","Конвоир","Кондитер","Коневод","Конструктор","Консультант","Консультант по туризму","Консультант телефона доверия","Контент-менеджер","Контролёр","Контролер производства","Концертмейстер","Кооператор","Копирайтер","Коридорный","Корпоративный архитектор","Корректор","Коррекционный педагог","Корреспондент","Косметик","Косметолог","Космонавт","Косторез","Костюмер","Коуч","Коучер","Кочегар","Крановщик","Краснодеревщик","Креативный директор","Кредитный консультант","Крепильщик","Кризис-менеджер","Критик","Кровельщик","Крупье","Кузнец","Кукловод","Кукольник","Кулинар","Культуролог","Купец","Курого","Курьер","Лаборант","Лаборант химического анализа","Ландшафтный дизайнер","Лашман","Лейб-медик","Лекарь","Лесник","Лесничий","Лесовод","Лесоруб","Лётный директор","Летчик","Лётчик-испытатель","Лид по анимации","Лимнолог","Лингвист","Линк-менеджер","Литейщик","Литейщик цветных металлов","Литературный агент","Личный ассистент покупок","Лоббист","Логист","Логопед","Локейшн-менеджер","Лоцман","Любитель","Майко","Макетчик","Маклер","Маляр","Мангака","Манекенщица","Маникюрша","Мануалист","Маркетолог","Маркшейдер","Массажист","Массовик-затейник","Мастер","Мастер леса","Мастер по ремонту автомобилей","Мастер по ремонту и техническому обслуживанию машинно-тракторного парка","Мастер сельскохозяйственного производства","Мастер столярно-плотничных и паркетных работ","Мастер участка","Мастер-оптик","Матадор","Математик","Матрос","Машинист","Машинист (кочегар) котельной","Машинист вибродоставочной погрузочной установки","Машинист компрессорных установок","Машинист локомотива","Машинист поезда","Машинист поезда в метро","Машинист скреперной установки","Машинист топливоподачи","Машинист экскаватора","Машинист электропоезда","Машинистка","Машиностроитель","Медальер","Медбрат","Медиа-байер","Медиапланер","Медийщик","Медицинская сестра","Медицинская сестра (Медсестра)","Медицинская сестра стоматологического отделения","Медицинский лабораторный техник","Медицинский представитель","Медицинский технолог","Международник","Мелиоратор","Менеджер","Менеджер отдела информационных технологий","Менеджер по PR","Менеджер по R and D","Менеджер по внешнеэкономической деятельности","Менеджер по вопросам кредитования и дебиторской задолженности","Менеджер по закупкам","Менеджер по логистике","Менеджер по маркетингу","Менеджер по оценкам рисков","Менеджер по персоналу","Менеджер по продажам","Менеджер по продажам холодильного оборудования","Менеджер по продукту","Менеджер по работе с клиентами","Менеджер по работе с таможней","Менеджер по развитию территории","Менеджер по рекламе","Менеджер по туризму","Менеджер торгового зала","Мерчандайзер","Месильщик","Металлург","Метеоролог","Методист","Метрдотель","Метролог","Механизатор","Механик","Механик по ремонту и обслуживанию автомобилей и двигателей","Механик электромобилей","Механик-водитель","Мехатроник","Микробиолог","Микропредприниматель","Милиционер","Министр","Мобильный разработчик","Модель","Модельер-конструктор","Модератор","Модератор форума","Модистка","Монтажёр","Монтажер телерадиовещательных компаний","Монтажник","Монтажник кондиционеров и систем вентиляции","Монтажник радиоэлектронной аппаратуры и приборов","Монтажник РЭА","Монтажник санитарно-технических устройств и оборудования","Монтажник связи","Монтажник технологического оборудования","Мореплаватель","Мортус","Моряк","Моторист","Моторист-рулевой","Музейный работник","Музыкант","Музыкант-исполнитель","Мультипликатор","Мусоропроводчик","Мусорщик","Мчсовец","Мясник","Наладчик","Наладчик КИПиА","Наладчик контрольно-измерительных приборов и автоматики","Налоговый инспектор","Нанотехнолог","Нарколог","Настройщик музыкальных инструментов","Натурщик","Научный сотрудник","Начальник отдела персонала","Начальник поезда","Невролог","Невропатолог","Нейробиолог","Нейролингвист","Нейрохирург","Неонатолог","Нефролог","Нефтяники","Нос","Нотариус","Няня","Облицовщик","Облицовщик-плиточник","Обогатитель полезных ископаемых","Обозреватель","Образописец","Обувщик","Овощевод","Огнеупорщик","Озеленитель","Окулист","Онколог","Оператор","Оператор call-центра","Оператор в производстве химических волокон","Оператор кино и телевидения","Оператор машинного доения","Оператор пейджинговой связи","Оператор ПК","Оператор поста управления","Оператор ЭВМ","Оперный певец","Оптик","Оптометрист","Оратор","Организатор досуга","Орнитолог","Ортодонт","Ортопед","Оружейник","Отделочник","Отделочник изделий из древесины","Отоларинголог","Оториноларинголог (ЛОР)","Офис-менеджер","Официант","Офтальмолог","Охотник","Охранник","Оценщик","Палач","Палеонтолог","Парамедик","Парикмахер","Пародонтолог","Пастух","Патологоанатом","Певец","Педагог","Педагог-организатор кружка","Педиатр","Пекарь","Переводчик","Переводчик русского жестового языка","Переплетчик","Печатник","Печник","Пианист","Пикадор","Пилот","Писатель","Плавильщик ферросплавов","Плакальщик","Плотник","Плотогон","Повар","Поводырь","Пожарный","Политик","Политолог","Полицейский","Полупрофессионал","Помощник руководителя","Портер","Портной","Портье","Постановщик трюков","Почвовед","Почтальон","Правовед","Предприниматель","Председатель колхоза","Преподаватель","Пресс-секретарь","Приглашённый профессор","Прислуга","Провизор","Проводник","Проводник вагона поезда","Проводник поезда","Программист","Программист 1С","Программист-разработчик","Программный директор","Продавец","Продавец-консультант","Продакт-менеджер","Продуктовый дизайнер","Продюсер","Прозектор","Производственный мастер","Проктолог","Прокурор","Промоутер","Промышленник","Промышленный альпинист","Прораб","Проректор","Профессионал","Профессия","Проходчик","Психиатр","Психолог","Психолог в школе","Психолог детский","Психолог по потреблению","Психолог семейный","Психотерапевт","Публицист","Пульмонолог","Путешественник","Пчеловод","Радиоведущий","Радиолог","Радиомеханик","Радиомонтажник","Радиотехник","Радиофизик","Радист","Разведчик","Разработчик видеоигр","Разработчики настольных игр","Раскройщик обуви","Растениевод","Реабилитолог","Реаниматолог","Регионовед","Редактор","Режиссер","Режиссёр монтажа","Режиссер прямого эфира","Режиссер-постановщик","Режиссёры","Рекрутер","Ректор","Религиовед","Ремесленник","Ремонтник","Ремонтник горного оборудования","Рентгенолог","Репортёр","Реставратор","Ресторатор","Референт","Риггер","Риелтор","Рихтовщик","Риэлтор","Руководитель","Руководитель полетов","Рыбак","Рыболов","Садовник","Садовод","Санинструктор","Санитар","Сантехник","Сапожник","Сатуратор","Сборщик","Сварщик","Сварщик-жестянщик","Светооператор","Светотехник","Свинопас","Связист","Священник","Священнослужитель","Секретарь","Секретарь-референт","Секретарь-стенографистка","Секретный агент","Сексолог","Селекционер","Сервейер","Сигнальщик","Системный администратор (сисадмин)","Системный аналитик","Системный программист","Скаут","Скорняк","Скотник","Скрипач","Скрипичный мастер","Скульптор","Следователь","Слесарь","Слесарь механосборочных работ","Слесарь по контрольно-измерительным приборам и автоматике","Слесарь-механик","Слесарь-ремонтник","Сметчик","Смотритель","Снабженец","Сомелье","Сотрудник таможни","Социальный педагог в школе","Социальный работник","Социолог","Спасатель","Спасатель на воде","Спелеолог","Специалист бэк-офиса","Специалист организационно-правовой защиты информации","Специалист отдела кадрового делопроизводства","Специалист отдела кредитования","Специалист по ВЭД","Специалист по государственному и муниципальному управлению","Специалист по игровому обучению","Специалист по информационной безопасности","Специалист по информационным ресурсам","Специалист по информационным системам","Специалист по клиническим исследованиям","Специалист по монолиту","Специалист по мясопереработке","Специалист по недвижимости","Специалист по облицовочным работам","Специалист по обслуживанию систем кондиционирования воздуха","Специалист по обслуживанию холодильно-компрессорных машин и установок","Специалист по отделочным работам","Специалист по рекламе","Специалист по сервису на транспорте","Специалист по системам безопасности","Специалист по стандартизации","Специалист по стрижке овец","Специалист по управлению персоналом","Специалист по учету недвижимости","Специалист по эксплуатации","Специалист по энергетике органических отходов","Специалист программно-аппаратной защиты информации","Специалист службы занятости","Специалист страхового дела","Специалист технической поддержки","Спичрайтер","Спортивный агент","Спортивный врач","Спортивный промоутер","Спортивный психолог","Спортивный судья","Спортивный тренер","Спортсмен","Сталевар","Станочник","Станочник в деревообработке","Станочник широкого профиля","Старший боцман","Старший помощник командира корабля","Статистик","Стекольщик","Стендист","Стенограф","Стилист","Столяр","Столяры-краснодеревщик","Стоматолог","Сторож","Страховой агент","Страховой следователь","Стрелочник","Стригаль","Строитель","Стюард","Стюардесса","Судебно-медицинский эксперт","Судебный медик","Судебный пристав","Судебный эксперт","Судья","Супервайзер","Сурдопедагог","Сурдопереводчик","Суфлёр","Сценарист","Счетовод","Сыродел","Сыщик","Таксидермист","Таксист","Тамада","Таможенник","Танцор","Танцор балета","Татуировщик","Творческий работник","Театральный режиссёр","Телеграфист","Тележурналист","Телеоператор","Телефонистка","Телохранитель","Теолог","Терапевт","Тестер","Тестировщик","Техник","Техник в региональных системах товародвижения и перевозки пассажиров","Техник по монтажу и эксплуатации оборудования и систем газоснабжения","Техник по разработке и сопровождению программного обеспечения","Техник по строительству и эксплуатации автомобильных дорог","Техник по строительству и эксплуатации мостов","Техник по эксплуатации","Техник службы безопасности движения","Техник-технолог","Технический консультант","Технический писатель","Технический редактор","Технолог","Технолог ателье","Технолог деревообрабатывающего производства","Технолог легкой промышленности","Технолог металлургического производства","Технолог общественного питания","Технолог пищевого производства","Технолог по нефтепереработке","Технолог полиграфического производства","Технолог сельскохозяйственного производства","Тимлид","Типограф","Тифлопедагог","Ткач","Товаровед","Токарь","Токсиколог","Торговый представитель","Тореадор","Торседор","Травматолог","Тракторист","Тракторист-машинист сельскохозяйственного производства","Траппер","Трафик-менеджер","Трейдер","Тренер","Тренер спортивной команды","Тренинг-менеджер","Трубочист","Трудовой инспектор","Туроператор","Тюремный надзиратель","Уборщица","Углежог","Уличный музыкант","Униформист","Упаковщик","Управленц","Уролог","Учёный","Учитель","Учитель биологии","Учитель географии","Учитель музыки","Учитель начальных классов","Учитель физической культуры","Фальцовщик","Фармацевт","Фельдшер","Фермер","Физик","Физиотерапевт","Филолог","Философ","Финансист","Финансовый аналитик","Финансовый менеджер","Финансовый советник","Флайт-менеджер","Флорист","Фонарщик","Фотограф","Фотокорреспондент","Фотомодель","Фрезеровщик","Фронт-энд разработчик","Хангёку","Химик","Химик-технолог","Хирург","Холодильщик","Хореограф","Хормейстер (дирижер хора)","Хранитель музея","Художественный редактор","Художник","Художник по костюму","Художник по текстурам","Художник-живописец","Художник-мультипликатор","Художник-постановщик","Художник-технолог","Художник-технолог по сценическому свету","Хэнё","Цветовод","Цветочница","Цензор","Циркач","Цирюльник","Чабан","Часовщик","Частный детектив","Шапитмейстер","Шахтер","Швейцар","Швея","Швея-мотористка","Шеф-повар","Шлифовщик","Шляпник","Шоколатье","Шоумен","Шофёр","Шпрехшталмейстер","Штукатур","Штукатур-маляр","Штурман","Эквилибрист","Экодизайнер","Эколог","Экономист","Экскаваторщик","Экскурсовод","Экспедитор","Эксперт","Электрик","Электрогазосварщик","Электролизник расплавленных солей","Электромонтажник","Электромонтер","Электромонтер по релейной защите","Электроник","Электросварщик","Эндокринолог","Энергетик","Энциклопедист","Эргономист","Этнограф","Ювелир","Юзабилист","Юзабилити-специалист","Юморист","Юнга","Юрисконсульт","Юрист","Ямщик","Яхтенный шкипер"];document.addEventListener("DOMContentLoaded",()=>{const r=document.querySelector(".profession-select"),t=document.querySelector(".profession-select__input");t.addEventListener("input",()=>{const n=[];at.every(i=>(i.toLowerCase().startsWith(t.value.toLowerCase())&&n.push(i),n.length<5)),s(n)});const e=document.querySelector(".profession-select__list");e.addEventListener("click",n=>{n.target.classList.contains("profession-select__list-elem")&&(t.value=n.target.innerText,r.classList.remove("profession-select--dropdown-show"))});const s=n=>{e.innerHTML="",n.length>0?(n.forEach(i=>{e.insertAdjacentHTML("beforeend",`<li class="profession-select__list-elem">${i}</li>`)}),r.classList.add("profession-select--dropdown-show")):r.classList.remove("profession-select--dropdown-show")}});const V="+{7} 000 000-00-00",H="+{8} 000 000-00-00",q="+{5} 0000-00-0000",z="+{3} 0000-00-0000",lt={ru:V,by:H,kz:q,am:z},ot=Object.freeze(Object.defineProperty({__proto__:null,am:z,by:H,default:lt,kz:q,ru:V},Symbol.toStringTag,{value:"Module"}));document.addEventListener("DOMContentLoaded",()=>{const r=document.querySelector(".form-group__input--phone"),t=IMask(r,{mask:V,lazy:!1}),e=document.querySelector(".country-flag");if(e){const s=e.querySelector(".country-flag__value");s.addEventListener("click",()=>{s.classList.toggle("country-flag__value--focus")});const n=e.querySelectorAll(".country-flag__list-elem");n.length&&n.forEach(i=>{i.addEventListener("click",()=>{s.innerHTML=i.innerHTML;const u=e.querySelector(".country-flag__list-elem--active");u&&u.classList.remove("country-flag__list-elem--active"),i.classList.add("country-flag__list-elem--active"),s.classList.remove("country-flag__value--focus"),r.value="",t.updateValue(""),t.updateOptions({mask:ot[i.dataset.country]})})}),document.addEventListener("click",i=>{e.contains(i.target)||s.classList.remove("country-flag__value--focus")})}});
